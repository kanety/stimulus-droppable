import{Controller as t}from"@hotwired/stimulus";import"@kanety/stimulus-static-actions";class e extends t{get draggers(){return this.scope.findAllElements('[draggable="true"]')}start(t){this.currentDrag=this.draggers.find(e=>e==t.target),this.currentDrag&&(this.toggleClass(!0),this.dispatch("start",{detail:{event:t,drag:this.currentDrag}}),this.context.actionSet.add(this.constructor.dragActions),t.dataTransfer.setDragImage(new Image,0,0))}enter(t){let e=this.findCurrentDrop(t.target);e&&(e.classList.add("st-droppable__drop--current"),this.dispatch("enter",{detail:{event:t,drag:this.currentDrag,drop:e}})),t.preventDefault()}over(t){let e=this.findCurrentDrop(t.target);e&&this.dispatch("over",{detail:{event:t,drag:this.currentDrag,drop:e}}),t.preventDefault()}leave(t){let e=this.findCurrentDrop(t.target);e&&(e.classList.remove("st-droppable__drop--current"),this.dispatch("leave",{detail:{event:t,drag:this.currentDrag,drop:e}}))}drag(t){this.dispatch("drag",{detail:{event:t,drag:this.currentDrag}})}drop(t){let e=this.findCurrentDrop(t.target);e&&this.dispatch("drop",{detail:{event:t,drag:this.currentDrag,drop:e}})}end(t){this.toggleClass(!1),this.dispatch("end",{detail:{event:t,drag:this.currentDrag}}),this.context.actionSet.remove(this.constructor.dragActions)}findCurrentDrop(t){return this.dropTargets.find(e=>e.contains(t))}toggleClass(t){this.dropTargets.forEach(t?t=>{t.classList.add("st-droppable__drop")}:t=>{t.classList.remove("st-droppable__drop"),t.classList.remove("st-droppable__drop--current")})}}e.targets=["drop"],e.actions=[["element","dragstart@document->start"]],e.dragActions=[["element","dragenter@document->enter"],["element","dragover@document->over"],["element","dragleave@document->leave"],["element","drag@document->drag"],["element","drop@document->drop"],["element","dragend@document->end"]];export{e as default};
//# sourceMappingURL=index.modern.js.map
